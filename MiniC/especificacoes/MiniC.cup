package br.com.minic.analisadorsintatico;

// TERMINAIS

terminal VOID, INT, FLOAT, DOUBLE, CHAR;
terminal INCLUDE, MAIN, RETURN, IF, ELSE, WHILE, PRINTF, PRINTINT, PRINTSTR;
terminal MENOR_IGUAL, MENOR, MAIOR_IGUAL, MAIOR, IGUAL, ATRIBUICAO, DIFERENTE, NEGACAO;
terminal SOMA, SUB, DIV, MULT;
terminal JOGO_DA_VELHA, PONTO, PONTO_VIRGULA, VIRGULA, ABRE_CHAVE, FECHA_CHAVE, ABRE_PARENTESES, FECHA_PARENTESES;
terminal LETRA_H;
terminal IDENTIFICADOR;
terminal LITERAL_INTEIRO;
terminal LITERAL_PONTO_FLUTUANTE;
terminal LITERAL_CHAR;
terminal LITERAL_STRING;

// NAO TERMINAL

non terminal ProgramaMiniC;
non terminal DeclInclude;
non terminal DeclIncludeList;
non terminal DeclFuncoes;
non terminal FuncaoPrincipal;
non terminal Tipo;

start with ProgramaMiniC;

ProgramaMiniC ::= DeclIncludeList {::};

DeclInclude ::= {::} |
				DeclIncludeList {::};
				
DeclIncludeList ::= {::} |
					DeclInclude DeclIncludeList {::};
					
DeclInclude ::= JOGO_DA_VELHA INCLUDE MENOR IDENTIFICADOR PONTO LETRA_H MAIOR {::};

DeclFuncoes ::= Tipo IDENTIFICADOR ABRE_PARENTESES ... FECHA_PARENTESES ABRE_CHAVE Comando MULT RETURN Expressao FECHA_CHAVE {::};

FuncaoPrincipal ::= INT MAIN ABRE_PARENTESES FECHA_PARENTESES ABRE_CHAVE Comando MULT RETURN LITERAL_INTEIRO FECHA_CHAVE {::};

Tipo ::= INT {::}; | FLOAT {::}; | DOUBLE {::}; | CHAR {::};

Comando ::= ABRE_CHAVE Comando MULT FECHA_CHAVE {::}; | 
	    if ( ExpRel ) Comando else Comando |
	    if ( ExpRel ) Comando |
	    while ( ExpRel) Comando |
	    printf ( Expressao ); |
	    printint ( Literal Inteiro ); |
	    printstr ( Literal String ); |
	    Tipo ID (, ID)*; |
	    Tipo ID = Expressao (, ID = Expressao)*; |
	    ID = Expressao;
	    
ExpRel ::= 
